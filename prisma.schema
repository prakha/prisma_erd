datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  profile   Profile?   @relation(fields: [profileId], references: [id])
  profileId Int?       @unique // Added @unique for 1-to-1
  posts     Post[]     // 1-to-many
  groups    Group[]    // Many-to-many (implicit)
  comments  Comment[]  // Added back relation
  createdAt DateTime @default(now())
}

model Profile {
  id      Int     @id @default(autoincrement())
  bio     String?
  user    User?      // 1-to-1 back relation
  images  Image[]    // 1-to-many
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[] // 1-to-many
  tags      Tag[]     // Many-to-many (implicit)
}

model Comment {
  id      Int    @id @default(autoincrement())
  text    String
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  author  User?  @relation(fields: [authorId], references: [id])
  authorId Int?
}

model Group {
  id      Int    @id @default(autoincrement())
  name    String
  members User[] // Many-to-many (implicit)
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] // Many-to-many (implicit)
}

model Image {
  id       Int     @id @default(autoincrement())
  url      String
  profile  Profile @relation(fields: [profileId], references: [id])
  profileId Int
}
