datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  profile   Profile?  @relation(fields: [profileId], references: [id])
  profileId Int?      @unique
  posts     Post[]
  groups    Group[]
  comments  Comment[]
  orders    Order[]
  addresses Address[]
  cart      Cart?
  events    Event[]   @relation("EventAttendees") // Added back relation for events
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
  replies   Comment[] @relation("CommentReplies") // Fixed self-relation
  parentId  Int?
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  createdAt DateTime  @default(now())
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  group       Group     @relation(fields: [groupId], references: [id])
  groupId     Int
  attendees   User[]    @relation("EventAttendees") // Fixed relation name
}

model Order {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  items      OrderItem[]
  status     String    @default("pending")
  total      Float
  address    Address   @relation(fields: [addressId], references: [id])
  addressId  Int
  createdAt  DateTime  @default(now())
  // Added back relation in Address model
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  city    String
  state   String
  zip     String
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  orders  Order[] // Added back relation
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  categories  Category[]
  cartItems   CartItem[]
  inventory   Inventory?
  orderItems  OrderItem[] // Added back relation
}
